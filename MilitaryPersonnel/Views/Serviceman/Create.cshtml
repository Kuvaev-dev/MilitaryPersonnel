@model Domain.Models.Serviceman

@{
    ViewData["Title"] = "Create Serviceman";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2 class="text-danger">@ViewBag.Message</h2>
        <h2 class="text-danger">@ViewBag.ErrorMessage</h2>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, "Enter First Name", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, "Enter Last Name", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, "Enter Middle Name", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, "Enter Birth Date", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CivilProfessionId, "Select Civil Profession", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.DropDownListFor(
                         model => model.CivilProfessionId,
                         new SelectList(ViewBag.CivilProfessionList, "CivilProfessionId", "CivilProfession"),
                         "Select Civil Profession (Optional)",
                         new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CivilProfessionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MilitarySpecialtyId, "Select Military Specialty", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.DropDownListFor(
                         model => model.MilitarySpecialtyId,
                         new SelectList(ViewBag.MilitarySpecialtyList, "MilitarySpecialtyId", "MilitarySpecialty"),
                         "Select Military Specialty (Optional)",
                         new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MilitarySpecialtyId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EducationId, "Select Education", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.DropDownListFor(
                         model => model.EducationId,
                         new SelectList(ViewBag.EducationList, "EducationId", "Education"),
                         "Select Education (Optional)",
                         new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EducationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PositionId, "Select Position", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.DropDownListFor(
                         model => model.PositionId,
                         new SelectList(ViewBag.PositionList, "PositionId", "Position"),
                         "Select Position (Optional)",
                         new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubdivisionId, "Select Subdivision", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.DropDownListFor(
                         model => model.SubdivisionId,
                         new SelectList(ViewBag.SubdivisionList, "SubdivisionId", "Subdivision"),
                         "Select Subdivision (Optional)",
                         new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubdivisionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceFormId, "Select Service Form", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.DropDownListFor(
                         model => model.ServiceFormId,
                         new SelectList(ViewBag.ServiceFormList, "ServiceFormId", "ServiceForm"),
                         "Select Service Form (Optional)",
                         new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceFormId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CharacterTraitId, "Select Character Trait", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.DropDownListFor(
                         model => model.CharacterTraitId,
                         new SelectList(ViewBag.CharacterTraitList, "CharacterTraitId", "CharacterTrait"),
                         "Select Character Trait (Optional)",
                         new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CharacterTraitId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceAttitudeId, "Select Service Attitude", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.DropDownListFor(
                         model => model.ServiceAttitudeId,
                         new SelectList(ViewBag.ServiceAttitudeList, "ServiceAttitudeId", "ServiceAttitude"),
                         "Select Service Attitude (Optional)",
                         new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceAttitudeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceStatusId, "Select Service Status", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.DropDownListFor(
                         model => model.ServiceStatusId,
                         new SelectList(ViewBag.ServiceStatusList, "ServiceStatusId", "ServiceStatus"),
                         "Select Service Status (Optional)",
                         new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceStatusId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FitnessCategoryId, "Select Fitness Category", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.DropDownListFor(
                         model => model.FitnessCategoryId,
                         new SelectList(ViewBag.FitnessCategoryList, "FitnessCategoryId", "FitnessCategory"),
                         "Select Fitness Category (Optional)",
                         new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FitnessCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, "Enter Address", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, "Enter Phone", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, "Enter Email", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsOfficer, "Is Officer", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.CheckBoxFor(model => model.IsOfficer.Value, new { @class = "form-check-input" })
                @Html.ValidationMessageFor(model => model.IsOfficer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
                @Html.ActionLink("Back To List", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}