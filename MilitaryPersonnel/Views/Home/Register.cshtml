@model MilitaryPersonnel.Models.RegisterViewModel

@{
    ViewData["Title"] = "Register";
    Layout = null;
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
<link rel="icon" type="image/x-icon" href="~/favicon.ico" />

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card mt-5" style="border-color: #333333;">
                <div class="card-header" style="background-color: #2F4F4F; color: #BDB76B;">
                    <h4><i class="bi bi-person-plus me-2"></i>Register</h4>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            @ViewBag.ErrorMessage
                        </div>
                    }
                    @using (Html.BeginForm("Register", "Home", null, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <div class="text-danger mb-3">
                            @Html.ValidationSummary(true, "")
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.UserName, "Username", htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-person"></i></span>
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter username", required = "required" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-envelope"></i></span>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email", placeholder = "Enter email", required = "required" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Password, "Password", htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-lock"></i></span>
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password", placeholder = "Enter password", required = "required" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.ConfirmPassword, "Confirm Password", htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-lock"></i></span>
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", type = "password", placeholder = "Confirm password", required = "required" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group d-flex gap-2">
                            <button type="submit" class="btn btn-success" style="background-color: #556B2F; border-color: #556B2F;">
                                <i class="bi bi-person-plus me-1"></i>Register
                            </button>
                            <div class="btn btn-primary" style="background-color: #2F4F4F; border-color: #2F4F4F;">
                                <i class="bi bi-box-arrow-in-right me-1"></i>
                                @Html.ActionLink("Back to Login", "Login", "Home", null, new { @class = "text-white text-decoration-none" })
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
}