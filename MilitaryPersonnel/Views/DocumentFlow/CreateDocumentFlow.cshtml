@model Domain.Models.DocumentFlow

@{
    ViewData["Title"] = "Створити документ";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="form-horizontal">
    <h2>Створити документ</h2>
    <h2 class="text-danger">@TempData["ErrorMessage"]</h2>
    <h2 class="text-success">@TempData["SuccessMessage"]</h2>

    @using (Html.BeginForm("CreateDocumentFlow", "Document", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Title, "Назва документа", new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, "Зміст документа", new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextAreaFor(model => model.Content, new { @class = "form-control", rows = "5" })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentTypeId, "Тип документа", new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.DocumentTypeId, ViewBag.DocumentTypeList as SelectList, "-- Виберіть тип документа --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DocumentTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedById, "Створено", new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.CreatedById, ViewBag.CreatedByList as SelectList, "-- Виберіть військовослужбовця --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CreatedById, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServicemanId, "Пов’язаний військовослужбовець", new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.ServicemanId, ViewBag.CreatedByList as SelectList, "-- Виберіть військовослужбовця (необов’язково) --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServicemanId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusId, "Статус документа", new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.StatusId, ViewBag.StatusList as SelectList, "-- Виберіть статус --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Створити" class="btn btn-success" />
                @Html.ActionLink("Назад до списку документів", "Index", "DocumentFlow", null, new { @class = "btn btn-default" })
            </div>
        </div>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}