@model Domain.Models.Training

@{
    ViewData["Title"] = "Create Training";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2 class="text-danger">@ViewBag.Message</h2>
        <h2 class="text-danger">@ViewBag.ErrorMessage</h2>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ServicemanId, "Select Serviceman", new { @class = "control-label col-md-10" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.ServicemanId, ViewBag.ServicemanList as SelectList, "-- Select Serviceman --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServicemanId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrainingName, "Enter Training Name", htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.TrainingName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrainingName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, "Enter Start Date", htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, "Enter End Date (Optional)", htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
                @Html.ActionLink("Back To List", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

<script>
    // Client-side validation for EndDate >= StartDate
    document.querySelector('form').addEventListener('submit', function (e) {
        var startDate = document.querySelector('#StartDate').value;
        var endDate = document.querySelector('#EndDate').value;
        if (startDate && endDate && new Date(endDate) < new Date(startDate)) {
            e.preventDefault();
            document.querySelector('#EndDate-error').innerText = 'End Date cannot be before Start Date.';
        }
    });
</script>