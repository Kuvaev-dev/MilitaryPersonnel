// <auto-generated />
using System;
using Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(MilitaryPersonnelContext))]
    [Migration("20250506220945_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Database.Models.Awards", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("AwardDate")
                        .HasColumnType("date");

                    b.Property<string>("AwardName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Awards__3214EC07881247D0");

                    b.HasIndex("ServicemanId");

                    b.ToTable("Awards");
                });

            modelBuilder.Entity("Database.Models.CharacterTraits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TraitName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Characte__3214EC07D4C6FF8D");

                    b.ToTable("CharacterTraits");
                });

            modelBuilder.Entity("Database.Models.CivilProfessions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProfessionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__CivilPro__3214EC077F9C80FE");

                    b.ToTable("CivilProfessions");
                });

            modelBuilder.Entity("Database.Models.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__ContactI__3214EC07149FCB2F");

                    b.HasIndex("ServicemanId");

                    b.ToTable("ContactInfo");
                });

            modelBuilder.Entity("Database.Models.DischargeLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("DischargeDate")
                        .HasColumnType("date");

                    b.Property<string>("DischargeReason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("LogDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Discharg__3214EC078EB882C8");

                    b.ToTable("DischargeLog");
                });

            modelBuilder.Entity("Database.Models.Discharges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DischargeDate")
                        .HasColumnType("date");

                    b.Property<string>("DischargeReason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Discharg__3214EC0705A57DC8");

                    b.HasIndex("ServicemanId");

                    b.ToTable("Discharges", t =>
                        {
                            t.HasTrigger("trg_AfterDischarge");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Database.Models.DocumentAssignments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AssignedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AssigneeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id")
                        .HasName("PK__Document__3214EC073023A88A");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("DocumentId");

                    b.ToTable("DocumentAssignments");
                });

            modelBuilder.Entity("Database.Models.DocumentFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("MilitaryUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Document__3214EC07E1B26C88");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("MilitaryUnitId");

                    b.HasIndex("ServicemanId");

                    b.HasIndex("StatusId");

                    b.ToTable("DocumentFlow");
                });

            modelBuilder.Entity("Database.Models.DocumentStatuses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Document__3214EC07E89C3F9A");

                    b.ToTable("DocumentStatuses");
                });

            modelBuilder.Entity("Database.Models.DocumentTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Document__3214EC07CD20F36A");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("Database.Models.Documents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DocumentNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly?>("IssueDate")
                        .HasColumnType("date");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Document__3214EC0771F975FB");

                    b.HasIndex("ServicemanId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Database.Models.Educations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EducationLevel")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("GraduationYear")
                        .HasColumnType("int");

                    b.Property<string>("Institution")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Specialty")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Educatio__3214EC07B1A6D7E0");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Database.Models.FamilyMembers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Relationship")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__FamilyMe__3214EC07AB47F928");

                    b.HasIndex("ServicemanId");

                    b.ToTable("FamilyMembers");
                });

            modelBuilder.Entity("Database.Models.FitnessCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__FitnessC__3214EC07EB94EAC7");

                    b.ToTable("FitnessCategories");
                });

            modelBuilder.Entity("Database.Models.LanguageSkills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Language")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProficiencyLevel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Language__3214EC07AF825A04");

                    b.HasIndex("ServicemanId");

                    b.ToTable("LanguageSkills");
                });

            modelBuilder.Entity("Database.Models.MedicalRecords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MedicalCondition")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("RecordDate")
                        .HasColumnType("date");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__MedicalR__3214EC0702719F01");

                    b.HasIndex("ServicemanId");

                    b.ToTable("MedicalRecords");
                });

            modelBuilder.Entity("Database.Models.MilitarySpecialties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SpecialtyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Military__3214EC07CAA81010");

                    b.ToTable("MilitarySpecialties");
                });

            modelBuilder.Entity("Database.Models.MilitaryUnits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Military__3214EC07012DC185");

                    b.ToTable("MilitaryUnits");
                });

            modelBuilder.Entity("Database.Models.MobilizationListEntries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MobilizationListId")
                        .HasColumnType("int");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Mobiliza__3214EC07B7B39F81");

                    b.HasIndex("MobilizationListId");

                    b.HasIndex("ServicemanId");

                    b.ToTable("MobilizationListEntries");
                });

            modelBuilder.Entity("Database.Models.MobilizationLists", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ListName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Mobiliza__3214EC070B4DC6E3");

                    b.ToTable("MobilizationLists");
                });

            modelBuilder.Entity("Database.Models.OperationalReadiness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("AssessmentDate")
                        .HasColumnType("date");

                    b.Property<string>("ReadinessStatus")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Operatio__3214EC075219E08E");

                    b.HasIndex("ServicemanId");

                    b.ToTable("OperationalReadiness");
                });

            modelBuilder.Entity("Database.Models.Positions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Position__3214EC07AC1015C1");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Database.Models.PsychologicalProfiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("AssessmentDate")
                        .HasColumnType("date");

                    b.Property<string>("ProfileDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Psycholo__3214EC07689799C3");

                    b.HasIndex("ServicemanId");

                    b.ToTable("PsychologicalProfiles");
                });

            modelBuilder.Entity("Database.Models.Punishments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("PunishmentDate")
                        .HasColumnType("date");

                    b.Property<string>("PunishmentDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Punishme__3214EC07B1C352BD");

                    b.HasIndex("ServicemanId");

                    b.ToTable("Punishments");
                });

            modelBuilder.Entity("Database.Models.RankAssignments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("AssignmentDate")
                        .HasColumnType("date");

                    b.Property<int?>("RankId")
                        .HasColumnType("int");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__RankAssi__3214EC072558147C");

                    b.HasIndex("RankId");

                    b.HasIndex("ServicemanId");

                    b.ToTable("RankAssignments");
                });

            modelBuilder.Entity("Database.Models.Ranks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RankName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Ranks__3214EC0766BDA39B");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("Database.Models.Recruitments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("RecruitmentDate")
                        .HasColumnType("date");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Recruitm__3214EC07D3EAAC26");

                    b.HasIndex("ServicemanId");

                    b.ToTable("Recruitments");
                });

            modelBuilder.Entity("Database.Models.Resolutions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResolutionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ResolutionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Resoluti__3214EC075C445D1B");

                    b.HasIndex("AuthorId");

                    b.HasIndex("DocumentId");

                    b.ToTable("Resolutions");
                });

            modelBuilder.Entity("Database.Models.ServiceAttitudes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttitudeDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__ServiceA__3214EC07DA82ECE5");

                    b.ToTable("ServiceAttitudes");
                });

            modelBuilder.Entity("Database.Models.ServiceForms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FormName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__ServiceF__3214EC07E60223CC");

                    b.ToTable("ServiceForms");
                });

            modelBuilder.Entity("Database.Models.ServiceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int?>("SubdivisionId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__ServiceH__3214EC07FF563193");

                    b.HasIndex("PositionId");

                    b.HasIndex("ServicemanId");

                    b.HasIndex("SubdivisionId");

                    b.ToTable("ServiceHistory");
                });

            modelBuilder.Entity("Database.Models.ServiceStatuses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__ServiceS__3214EC073F7CFCAD");

                    b.ToTable("ServiceStatuses");
                });

            modelBuilder.Entity("Database.Models.Servicemen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int?>("CharacterTraitId")
                        .HasColumnType("int");

                    b.Property<int?>("CivilProfessionId")
                        .HasColumnType("int");

                    b.Property<int?>("EducationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("FitnessCategoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsOfficer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MilitarySpecialtyId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceAttitudeId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceFormId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("SubdivisionId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Servicem__3214EC076662FD23");

                    b.HasIndex("CharacterTraitId");

                    b.HasIndex("CivilProfessionId");

                    b.HasIndex("EducationId");

                    b.HasIndex("FitnessCategoryId");

                    b.HasIndex("MilitarySpecialtyId");

                    b.HasIndex("PositionId");

                    b.HasIndex("ServiceAttitudeId");

                    b.HasIndex("ServiceFormId");

                    b.HasIndex("ServiceStatusId");

                    b.HasIndex("SubdivisionId");

                    b.ToTable("Servicemen", t =>
                        {
                            t.HasTrigger("trg_AfterInsertServiceman");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Database.Models.Subdivisions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MilitaryUnitId")
                        .HasColumnType("int");

                    b.Property<string>("SubdivisionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Subdivis__3214EC07374AB499");

                    b.HasIndex("MilitaryUnitId");

                    b.ToTable("Subdivisions");
                });

            modelBuilder.Entity("Database.Models.Trainings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("ServicemanId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("TrainingName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Training__3214EC071F9F2F71");

                    b.HasIndex("ServicemanId");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("Database.Models.vw_ServicemenDetails", b =>
                {
                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("CivilProfession")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EducationLevel")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MilitarySpecialty")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MilitaryUnit")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PositionName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RankName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ServiceForm")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ServicemanId")
                        .HasColumnType("int");

                    b.Property<string>("SubdivisionName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToTable((string)null);

                    b.ToView("vw_ServicemenDetails", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Database.Models.Awards", b =>
                {
                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("Awards")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK__Awards__Servicem__59FA5E80");

                    b.Navigation("Serviceman");
                });

            modelBuilder.Entity("Database.Models.ContactInfo", b =>
                {
                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("ContactInfo")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK__ContactIn__Servi__4CA06362");

                    b.Navigation("Serviceman");
                });

            modelBuilder.Entity("Database.Models.Discharges", b =>
                {
                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("Discharges")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK__Discharge__Servi__778AC167");

                    b.Navigation("Serviceman");
                });

            modelBuilder.Entity("Database.Models.DocumentAssignments", b =>
                {
                    b.HasOne("Database.Models.Servicemen", "Assignee")
                        .WithMany("DocumentAssignments")
                        .HasForeignKey("AssigneeId")
                        .IsRequired()
                        .HasConstraintName("FK__DocumentA__Assig__0F624AF8");

                    b.HasOne("Database.Models.DocumentFlow", "Document")
                        .WithMany("DocumentAssignments")
                        .HasForeignKey("DocumentId")
                        .IsRequired()
                        .HasConstraintName("FK__DocumentA__Docum__0E6E26BF");

                    b.Navigation("Assignee");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("Database.Models.DocumentFlow", b =>
                {
                    b.HasOne("Database.Models.Servicemen", "CreatedBy")
                        .WithMany("DocumentFlowCreatedBy")
                        .HasForeignKey("CreatedById")
                        .IsRequired()
                        .HasConstraintName("FK__DocumentF__Creat__08B54D69");

                    b.HasOne("Database.Models.DocumentTypes", "DocumentType")
                        .WithMany("DocumentFlow")
                        .HasForeignKey("DocumentTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__DocumentF__Docum__07C12930");

                    b.HasOne("Database.Models.MilitaryUnits", "MilitaryUnit")
                        .WithMany("DocumentFlow")
                        .HasForeignKey("MilitaryUnitId")
                        .HasConstraintName("FK_DocumentFlow_MilitaryUnits");

                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("DocumentFlowServiceman")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK_DocumentFlow_Servicemen");

                    b.HasOne("Database.Models.DocumentStatuses", "Status")
                        .WithMany("DocumentFlow")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK__DocumentF__Statu__09A971A2");

                    b.Navigation("CreatedBy");

                    b.Navigation("DocumentType");

                    b.Navigation("MilitaryUnit");

                    b.Navigation("Serviceman");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Database.Models.Documents", b =>
                {
                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("Documents")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK__Documents__Servi__4F7CD00D");

                    b.Navigation("Serviceman");
                });

            modelBuilder.Entity("Database.Models.FamilyMembers", b =>
                {
                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("FamilyMembers")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK__FamilyMem__Servi__5FB337D6");

                    b.Navigation("Serviceman");
                });

            modelBuilder.Entity("Database.Models.LanguageSkills", b =>
                {
                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("LanguageSkills")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK__LanguageS__Servi__68487DD7");

                    b.Navigation("Serviceman");
                });

            modelBuilder.Entity("Database.Models.MedicalRecords", b =>
                {
                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK__MedicalRe__Servi__571DF1D5");

                    b.Navigation("Serviceman");
                });

            modelBuilder.Entity("Database.Models.MobilizationListEntries", b =>
                {
                    b.HasOne("Database.Models.MobilizationLists", "MobilizationList")
                        .WithMany("MobilizationListEntries")
                        .HasForeignKey("MobilizationListId")
                        .HasConstraintName("FK__Mobilizat__Mobil__70DDC3D8");

                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("MobilizationListEntries")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK__Mobilizat__Servi__71D1E811");

                    b.Navigation("MobilizationList");

                    b.Navigation("Serviceman");
                });

            modelBuilder.Entity("Database.Models.OperationalReadiness", b =>
                {
                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("OperationalReadiness")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK__Operation__Servi__6B24EA82");

                    b.Navigation("Serviceman");
                });

            modelBuilder.Entity("Database.Models.PsychologicalProfiles", b =>
                {
                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("PsychologicalProfiles")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK__Psycholog__Servi__628FA481");

                    b.Navigation("Serviceman");
                });

            modelBuilder.Entity("Database.Models.Punishments", b =>
                {
                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("Punishments")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK__Punishmen__Servi__5CD6CB2B");

                    b.Navigation("Serviceman");
                });

            modelBuilder.Entity("Database.Models.RankAssignments", b =>
                {
                    b.HasOne("Database.Models.Ranks", "Rank")
                        .WithMany("RankAssignments")
                        .HasForeignKey("RankId")
                        .HasConstraintName("FK__RankAssig__RankI__49C3F6B7");

                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("RankAssignments")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK__RankAssig__Servi__48CFD27E");

                    b.Navigation("Rank");

                    b.Navigation("Serviceman");
                });

            modelBuilder.Entity("Database.Models.Recruitments", b =>
                {
                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("Recruitments")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK__Recruitme__Servi__74AE54BC");

                    b.Navigation("Serviceman");
                });

            modelBuilder.Entity("Database.Models.Resolutions", b =>
                {
                    b.HasOne("Database.Models.Servicemen", "Author")
                        .WithMany("Resolutions")
                        .HasForeignKey("AuthorId")
                        .IsRequired()
                        .HasConstraintName("FK__Resolutio__Autho__14270015");

                    b.HasOne("Database.Models.DocumentFlow", "Document")
                        .WithMany("Resolutions")
                        .HasForeignKey("DocumentId")
                        .IsRequired()
                        .HasConstraintName("FK__Resolutio__Docum__1332DBDC");

                    b.Navigation("Author");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("Database.Models.ServiceHistory", b =>
                {
                    b.HasOne("Database.Models.Positions", "Position")
                        .WithMany("ServiceHistory")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK__ServiceHi__Posit__534D60F1");

                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("ServiceHistory")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK__ServiceHi__Servi__52593CB8");

                    b.HasOne("Database.Models.Subdivisions", "Subdivision")
                        .WithMany("ServiceHistory")
                        .HasForeignKey("SubdivisionId")
                        .HasConstraintName("FK__ServiceHi__Subdi__5441852A");

                    b.Navigation("Position");

                    b.Navigation("Serviceman");

                    b.Navigation("Subdivision");
                });

            modelBuilder.Entity("Database.Models.Servicemen", b =>
                {
                    b.HasOne("Database.Models.CharacterTraits", "CharacterTrait")
                        .WithMany("Servicemen")
                        .HasForeignKey("CharacterTraitId")
                        .HasConstraintName("FK__Serviceme__Chara__4222D4EF");

                    b.HasOne("Database.Models.CivilProfessions", "CivilProfession")
                        .WithMany("Servicemen")
                        .HasForeignKey("CivilProfessionId")
                        .HasConstraintName("FK__Serviceme__Civil__3C69FB99");

                    b.HasOne("Database.Models.Educations", "Education")
                        .WithMany("Servicemen")
                        .HasForeignKey("EducationId")
                        .HasConstraintName("FK__Serviceme__Educa__3E52440B");

                    b.HasOne("Database.Models.FitnessCategories", "FitnessCategory")
                        .WithMany("Servicemen")
                        .HasForeignKey("FitnessCategoryId")
                        .HasConstraintName("FK__Serviceme__Fitne__44FF419A");

                    b.HasOne("Database.Models.MilitarySpecialties", "MilitarySpecialty")
                        .WithMany("Servicemen")
                        .HasForeignKey("MilitarySpecialtyId")
                        .HasConstraintName("FK__Serviceme__Milit__3D5E1FD2");

                    b.HasOne("Database.Models.Positions", "Position")
                        .WithMany("Servicemen")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK__Serviceme__Posit__3F466844");

                    b.HasOne("Database.Models.ServiceAttitudes", "ServiceAttitude")
                        .WithMany("Servicemen")
                        .HasForeignKey("ServiceAttitudeId")
                        .HasConstraintName("FK__Serviceme__Servi__4316F928");

                    b.HasOne("Database.Models.ServiceForms", "ServiceForm")
                        .WithMany("Servicemen")
                        .HasForeignKey("ServiceFormId")
                        .HasConstraintName("FK__Serviceme__Servi__412EB0B6");

                    b.HasOne("Database.Models.ServiceStatuses", "ServiceStatus")
                        .WithMany("Servicemen")
                        .HasForeignKey("ServiceStatusId")
                        .HasConstraintName("FK__Serviceme__Servi__440B1D61");

                    b.HasOne("Database.Models.Subdivisions", "Subdivision")
                        .WithMany("Servicemen")
                        .HasForeignKey("SubdivisionId")
                        .HasConstraintName("FK__Serviceme__Subdi__403A8C7D");

                    b.Navigation("CharacterTrait");

                    b.Navigation("CivilProfession");

                    b.Navigation("Education");

                    b.Navigation("FitnessCategory");

                    b.Navigation("MilitarySpecialty");

                    b.Navigation("Position");

                    b.Navigation("ServiceAttitude");

                    b.Navigation("ServiceForm");

                    b.Navigation("ServiceStatus");

                    b.Navigation("Subdivision");
                });

            modelBuilder.Entity("Database.Models.Subdivisions", b =>
                {
                    b.HasOne("Database.Models.MilitaryUnits", "MilitaryUnit")
                        .WithMany("Subdivisions")
                        .HasForeignKey("MilitaryUnitId")
                        .HasConstraintName("FK__Subdivisi__Milit__267ABA7A");

                    b.Navigation("MilitaryUnit");
                });

            modelBuilder.Entity("Database.Models.Trainings", b =>
                {
                    b.HasOne("Database.Models.Servicemen", "Serviceman")
                        .WithMany("Trainings")
                        .HasForeignKey("ServicemanId")
                        .HasConstraintName("FK__Trainings__Servi__656C112C");

                    b.Navigation("Serviceman");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.Models.CharacterTraits", b =>
                {
                    b.Navigation("Servicemen");
                });

            modelBuilder.Entity("Database.Models.CivilProfessions", b =>
                {
                    b.Navigation("Servicemen");
                });

            modelBuilder.Entity("Database.Models.DocumentFlow", b =>
                {
                    b.Navigation("DocumentAssignments");

                    b.Navigation("Resolutions");
                });

            modelBuilder.Entity("Database.Models.DocumentStatuses", b =>
                {
                    b.Navigation("DocumentFlow");
                });

            modelBuilder.Entity("Database.Models.DocumentTypes", b =>
                {
                    b.Navigation("DocumentFlow");
                });

            modelBuilder.Entity("Database.Models.Educations", b =>
                {
                    b.Navigation("Servicemen");
                });

            modelBuilder.Entity("Database.Models.FitnessCategories", b =>
                {
                    b.Navigation("Servicemen");
                });

            modelBuilder.Entity("Database.Models.MilitarySpecialties", b =>
                {
                    b.Navigation("Servicemen");
                });

            modelBuilder.Entity("Database.Models.MilitaryUnits", b =>
                {
                    b.Navigation("DocumentFlow");

                    b.Navigation("Subdivisions");
                });

            modelBuilder.Entity("Database.Models.MobilizationLists", b =>
                {
                    b.Navigation("MobilizationListEntries");
                });

            modelBuilder.Entity("Database.Models.Positions", b =>
                {
                    b.Navigation("ServiceHistory");

                    b.Navigation("Servicemen");
                });

            modelBuilder.Entity("Database.Models.Ranks", b =>
                {
                    b.Navigation("RankAssignments");
                });

            modelBuilder.Entity("Database.Models.ServiceAttitudes", b =>
                {
                    b.Navigation("Servicemen");
                });

            modelBuilder.Entity("Database.Models.ServiceForms", b =>
                {
                    b.Navigation("Servicemen");
                });

            modelBuilder.Entity("Database.Models.ServiceStatuses", b =>
                {
                    b.Navigation("Servicemen");
                });

            modelBuilder.Entity("Database.Models.Servicemen", b =>
                {
                    b.Navigation("Awards");

                    b.Navigation("ContactInfo");

                    b.Navigation("Discharges");

                    b.Navigation("DocumentAssignments");

                    b.Navigation("DocumentFlowCreatedBy");

                    b.Navigation("DocumentFlowServiceman");

                    b.Navigation("Documents");

                    b.Navigation("FamilyMembers");

                    b.Navigation("LanguageSkills");

                    b.Navigation("MedicalRecords");

                    b.Navigation("MobilizationListEntries");

                    b.Navigation("OperationalReadiness");

                    b.Navigation("PsychologicalProfiles");

                    b.Navigation("Punishments");

                    b.Navigation("RankAssignments");

                    b.Navigation("Recruitments");

                    b.Navigation("Resolutions");

                    b.Navigation("ServiceHistory");

                    b.Navigation("Trainings");
                });

            modelBuilder.Entity("Database.Models.Subdivisions", b =>
                {
                    b.Navigation("ServiceHistory");

                    b.Navigation("Servicemen");
                });
#pragma warning restore 612, 618
        }
    }
}
